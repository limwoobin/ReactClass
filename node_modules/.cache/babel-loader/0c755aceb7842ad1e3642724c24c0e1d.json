{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport { isMuiElement } from '../utils/reactHelpers';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"margin\", \"required\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      adornedStart = _React$useState2[0];\n\n  var _React$useState3 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filled = _React$useState4[0],\n      setFilled = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var handleFocus = function handleFocus() {\n    setFocused(true);\n  };\n\n  var handleBlur = function handleBlur() {\n    setFocused(false);\n  };\n\n  var handleDirty = function handleDirty() {\n    if (!filled) {\n      setFilled(true);\n    }\n  };\n\n  var handleClean = function handleClean() {\n    if (filled) {\n      setFilled(false);\n    }\n  };\n\n  var childContext = {\n    adornedStart: adornedStart,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    margin: margin,\n    onBlur: handleBlur,\n    onEmpty: handleClean,\n    onFilled: handleDirty,\n    onFocus: handleFocus,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/node_modules/@material-ui/core/esm/FormControl/FormControl.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","React","PropTypes","clsx","isFilled","isAdornedStart","withStyles","capitalize","isMuiElement","FormControlContext","styles","root","display","flexDirection","position","minWidth","padding","margin","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","fullWidth","width","FormControl","forwardRef","props","ref","children","classes","className","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","_props$margin","_props$required","required","_props$variant","variant","other","_React$useState","useState","initialAdornedStart","Children","forEach","child","input","_React$useState2","adornedStart","_React$useState3","initialFilled","_React$useState4","filled","setFilled","_React$useState5","_React$useState6","focused","setFocused","handleFocus","handleBlur","handleDirty","handleClean","childContext","onBlur","onEmpty","onFilled","onFocus","createElement","Provider","value","concat","process","env","NODE_ENV","propTypes","node","object","isRequired","string","elementType","bool","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport { isMuiElement } from '../utils/reactHelpers';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"margin\", \"required\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      adornedStart = _React$useState2[0];\n\n  var _React$useState3 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filled = _React$useState4[0],\n      setFilled = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var handleFocus = function handleFocus() {\n    setFocused(true);\n  };\n\n  var handleBlur = function handleBlur() {\n    setFocused(false);\n  };\n\n  var handleDirty = function handleDirty() {\n    if (!filled) {\n      setFilled(true);\n    }\n  };\n\n  var handleClean = function handleClean() {\n    if (filled) {\n      setFilled(false);\n    }\n  };\n\n  var childContext = {\n    adornedStart: adornedStart,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    margin: margin,\n    onBlur: handleBlur,\n    onEmpty: handleClean,\n    onFilled: handleDirty,\n    onFocus: handleFocus,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);"]},"metadata":{},"sourceType":"module"}