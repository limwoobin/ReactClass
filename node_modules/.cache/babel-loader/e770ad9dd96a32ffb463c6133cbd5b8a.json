{"ast":null,"code":"import _classCallCheck from\"/Applications/woobeenkun/myBlog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Applications/woobeenkun/myBlog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Applications/woobeenkun/myBlog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Applications/woobeenkun/myBlog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Applications/woobeenkun/myBlog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{post}from'axios';//import axios from 'axios';\nimport Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import{withStyles}from'@material-ui/core/styles';var styles=function styles(theme){return{hidden:{display:'none'}};};var CustomerAdd=/*#__PURE__*/function(_Component){_inherits(CustomerAdd,_Component);// static defaultProps = {\n// }    -> class 형에서 쓰이는 디폴트\nfunction CustomerAdd(props){var _this;_classCallCheck(this,CustomerAdd);_this=_possibleConstructorReturn(this,_getPrototypeOf(CustomerAdd).call(this,props));_this.handleFormSubmit=function(e){e.preventDefault();_this.addCustomer().then(function(response){console.log(response.data);_this.props.stateRefresh();});// 추가버튼 호출 후 고객 추가 양식을 비운 뒤 페이지를 새로고참\n_this.setState({file:null,userName:'',birthday:'',gender:'',job:'',fileName:'',open:false});};_this.handleFileChange=function(e){_this.setState({file:e.target.files[0],fileName:e.target.value});};_this.handleValueChange=function(e){var nextState={};nextState[e.target.name]=e.target.value;_this.setState(nextState);};_this.addCustomer=function(){var url='/dr/customer/insert';var formData=new FormData();formData.append('image',_this.state.file);formData.append('name',_this.state.userName);formData.append('birthday',_this.state.birthday);formData.append('gender',_this.state.gender);formData.append('job',_this.state.job);var config={headers:{//'content-type':'multipart/form-data'\n'Content-Type':'application/x-www-form-urlencoded;charset=UTF-8'}};return post(url,formData,config);// return axios.post(url , {\n//     //headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'},\n//     headers:{'content-type':'multipart/form-data'},\n//     image: this.state.file,\n//     name: this.state.userName,\n//     birthday: this.state.birthday,\n//     gender: this.state.gender,\n//     job: this.state.job\n// });\n};_this.handleClickOpen=function(){_this.setState({open:true});};_this.handleClose=function(){_this.setState({file:null,userName:'',birthday:'',gender:'',job:'',fileName:'',open:false});};_this.state={file:null,userName:'',birthday:'',gender:'',job:'',fileName:'',open:false};// this.handleFormSubmit = this.handleFormSubmit.bind(this);\n// this.handleFileChange = this.handleFileChange.bind(this);\n// this.handleValueChange = this.handleValueChange.bind(this);\n// this.addCustomer = this.addCustomer.bind(this);\n// this.handleClickOpen = this.handleClickOpen.bind(this);\n// this.handleClose = this.handleClose.bind(this);\n// 함수를 화살표 함수로 정의했으면 바인딩안해줘도 된다\n// 바인딩을 해주는 이유는 일반함수로 선언시 버튼클릭과정에서 this의 연결이 끊어지기 때문\n// 일반 함수는 호출된곳을 this 로 참조하기 때문\nreturn _this;}_createClass(CustomerAdd,[{key:\"render\",value:function render(){var classes=this.props.classes;return(// <form onSubmit={this.handleFormSubmit}>\n// <h1>고객 추가</h1>\n// 프로필 이미지: <input type=\"file\" name=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /><br/>\n// 이름: <input type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br/>\n// 생년월일: <input type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br/>\n// 성별: <input type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br/>\n// 직업: <input type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br/>\n// <button type=\"submit\">추가하기</button>\n// </form>\nReact.createElement(\"div\",null,React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:this.handleClickOpen},\"\\uACE0\\uAC1D \\uCD94\\uAC00\\uD558\\uAE30\"),React.createElement(Dialog,{open:this.state.open,onClose:this.handleClose},React.createElement(DialogTitle,null,\"\\uACE0\\uAC1D \\uCD94\\uAC00\"),React.createElement(DialogContent,null,React.createElement(\"input\",{className:classes.hidden,accept:\"image/*\",id:\"raised-button-file\",type:\"file\",file:this.state.file,value:this.state.fileName,onChange:this.handleFileChange}),React.createElement(\"label\",{htmlFor:\"raised-button-file\"},React.createElement(Button,{variant:\"contained\",color:\"primary\",component:\"span\",name:\"file\"},this.state.fileName===''?\"프로필 이미지 선택\":this.state.fileName)),React.createElement(\"br\",null),React.createElement(TextField,{label:\"\\uC774\\uB984\",type:\"text\",name:\"userName\",value:this.state.userName,onChange:this.handleValueChange}),React.createElement(\"br\",null),React.createElement(TextField,{label:\"\\uC0DD\\uB144\\uC6D4\\uC77C\",type:\"text\",name:\"birthday\",value:this.state.birthday,onChange:this.handleValueChange}),React.createElement(\"br\",null),React.createElement(TextField,{label:\"\\uC131\\uBCC4\",type:\"text\",name:\"gender\",value:this.state.gender,onChange:this.handleValueChange}),React.createElement(\"br\",null),React.createElement(TextField,{label:\"\\uC9C1\\uC5C5\",type:\"text\",name:\"job\",value:this.state.job,onChange:this.handleValueChange}),React.createElement(\"br\",null)),React.createElement(DialogActions,null,React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:this.handleFormSubmit},\"\\uCD94\\uAC00\"),React.createElement(Button,{variant:\"outlined\",color:\"primary\",onClick:this.handleClose},\"\\uB2EB\\uAE30\")))));}}]);return CustomerAdd;}(Component);// CustomerAdd.defaultProps = {\n// } -> 함수형에서 쓰이는 방식(hooks)\nexport default withStyles(styles)(CustomerAdd);","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/src/components/CustomerAdd.jsx"],"names":["React","Component","post","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Button","withStyles","styles","theme","hidden","display","CustomerAdd","props","handleFormSubmit","e","preventDefault","addCustomer","then","response","console","log","data","stateRefresh","setState","file","userName","birthday","gender","job","fileName","open","handleFileChange","target","files","value","handleValueChange","nextState","name","url","formData","FormData","append","state","config","headers","handleClickOpen","handleClose","classes"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport {post} from 'axios';\n//import axios from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    hidden: {\n        display: 'none'\n    }\n});\n\nclass CustomerAdd extends Component{\n    // static defaultProps = {\n\n    // }    -> class 형에서 쓰이는 디폴트\n    constructor(props){\n        super(props);\n        this.state = {\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        }\n        // this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        // this.handleFileChange = this.handleFileChange.bind(this);\n        // this.handleValueChange = this.handleValueChange.bind(this);\n        // this.addCustomer = this.addCustomer.bind(this);\n        // this.handleClickOpen = this.handleClickOpen.bind(this);\n        // this.handleClose = this.handleClose.bind(this);\n        // 함수를 화살표 함수로 정의했으면 바인딩안해줘도 된다\n        // 바인딩을 해주는 이유는 일반함수로 선언시 버튼클릭과정에서 this의 연결이 끊어지기 때문\n        // 일반 함수는 호출된곳을 this 로 참조하기 때문\n    }    \n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.addCustomer()\n        .then((response) => {\n            console.log(response.data);\n            this.props.stateRefresh();\n        })\n\n        // 추가버튼 호출 후 고객 추가 양식을 비운 뒤 페이지를 새로고참\n        this.setState({\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        });\n    }\n\n    handleFileChange = (e) => {\n        this.setState({\n            file: e.target.files[0],\n            fileName: e.target.value\n        });\n    }     \n\n    handleValueChange = (e) => {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addCustomer = () => {\n        const url = '/dr/customer/insert';\n        const formData = new FormData();\n        formData.append('image' , this.state.file);\n        formData.append('name' , this.state.userName);\n        formData.append('birthday' , this.state.birthday);\n        formData.append('gender' , this.state.gender);\n        formData.append('job' , this.state.job);\n        const config = {\n            headers: {\n                //'content-type':'multipart/form-data'\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            }\n        };\n        return post(url , formData , config);\n        // return axios.post(url , {\n        //     //headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'},\n        //     headers:{'content-type':'multipart/form-data'},\n        //     image: this.state.file,\n        //     name: this.state.userName,\n        //     birthday: this.state.birthday,\n        //     gender: this.state.gender,\n        //     job: this.state.job\n        // });\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        });\n    }\n\n    render(){\n        const { classes } = this.props;\n        return (\n            // <form onSubmit={this.handleFormSubmit}>\n            // <h1>고객 추가</h1>\n            // 프로필 이미지: <input type=\"file\" name=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /><br/>\n            // 이름: <input type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br/>\n            // 생년월일: <input type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br/>\n            // 성별: <input type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br/>\n            // 직업: <input type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br/>\n            // <button type=\"submit\">추가하기</button>\n            // </form>\n            <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n            고객 추가하기\n            </Button>\n            <Dialog open={this.state.open} onClose={this.handleClose}>\n                <DialogTitle>고객 추가</DialogTitle>\n                <DialogContent>\n                    <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} />\n                    <label htmlFor=\"raised-button-file\">\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\n                            {this.state.fileName === ''? \"프로필 이미지 선택\" : this.state.fileName}\n                        </Button>\n                    </label><br/>\n                    <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br/>\n                    <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br/>\n                    <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br/>\n                    <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br/>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n    }\n}\n\n// CustomerAdd.defaultProps = {\n\n// } -> 함수형에서 쓰이는 방식(hooks)\n\nexport default withStyles(styles)(CustomerAdd);"]},"metadata":{},"sourceType":"module"}