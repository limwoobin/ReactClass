{"ast":null,"code":"var _jsxFileName = \"/Applications/woobeenkun/myBlog/client/src/common/component/Comment/Comment.jsx\";\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ChildComment from './ChildComment';\nimport { Func } from '../../common';\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const _this$props = this.props,\n          image = _this$props.image,\n          userEmail = _this$props.userEmail,\n          content = _this$props.content,\n          modiDate = _this$props.modiDate,\n          childComments = _this$props.childComments;\n\n    const renderChildComments = data => {\n      console.log('data:' + data);\n      return data.map(c => {\n        return React.createElement(ChildComment, {\n          key: c._id,\n          image: c.image,\n          childCommentId: c.childCommentId,\n          userEmail: c.userEmail,\n          content: c.content,\n          modiDate: c.modiDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, image, userEmail, \" : \", content, \" \\xA0 \", Func.DateFormat(modiDate), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), childComments ? renderChildComments(childComments) : '', React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/src/common/component/Comment/Comment.jsx"],"names":["React","Component","Divider","ChildComment","Func","Comment","constructor","props","state","render","image","userEmail","content","modiDate","childComments","renderChildComments","data","console","log","map","c","_id","childCommentId","DateFormat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,IAAR,QAAmB,cAAnB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAA+B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAIDC,EAAAA,MAAM,GAAE;AAAA,wBAC6D,KAAKF,KADlE;AAAA,UACGG,KADH,eACGA,KADH;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACuBC,OADvB,eACuBA,OADvB;AAAA,UACiCC,QADjC,eACiCA,QADjC;AAAA,UAC4CC,aAD5C,eAC4CA,aAD5C;;AAEJ,UAAMC,mBAAmB,GAAIC,IAAD,IAAU;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,IAAtB;AACA,aAAOA,IAAI,CAACG,GAAL,CAAUC,CAAD,IAAO;AACnB,eAAO,oBAAC,YAAD;AACK,UAAA,GAAG,EAAEA,CAAC,CAACC,GADZ;AAEK,UAAA,KAAK,EAAED,CAAC,CAACV,KAFd;AAGK,UAAA,cAAc,EAAEU,CAAC,CAACE,cAHvB;AAIK,UAAA,SAAS,EAAEF,CAAC,CAACT,SAJlB;AAKK,UAAA,OAAO,EAAES,CAAC,CAACR,OALhB;AAMK,UAAA,QAAQ,EAAEQ,CAAC,CAACP,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH,OATM,CAAP;AAUH,KAZD;;AAcA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KADL,EACYC,SADZ,SAC0BC,OAD1B,YAC2CR,IAAI,CAACmB,UAAL,CAAgBV,QAAhB,CAD3C,OACsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtE,EAEKC,aAAa,GAAGC,mBAAmB,CAACD,aAAD,CAAtB,GACZ,EAHN,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAlC0B;;AAuC/B,eAAeT,OAAf","sourcesContent":["import React , {Component} from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ChildComment from './ChildComment';\nimport {Func} from '../../common';\n\nclass Comment extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    \n\n    render(){\n        const {image , userEmail , content , modiDate , childComments} = this.props;\n        const renderChildComments = (data) => {\n            console.log('data:' + data);\n            return data.map((c) => {\n                return <ChildComment \n                            key={c._id}\n                            image={c.image}\n                            childCommentId={c.childCommentId}\n                            userEmail={c.userEmail}\n                            content={c.content}\n                            modiDate={c.modiDate}\n                        />\n            });\n        }\n\n        return (\n            <div>\n                {image}{userEmail} : {content} &nbsp; {Func.DateFormat(modiDate)} <br/>\n                {childComments ? renderChildComments(childComments)\n                : ''}\n                <Divider />\n            </div>\n        )\n    }\n}\n\n\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}