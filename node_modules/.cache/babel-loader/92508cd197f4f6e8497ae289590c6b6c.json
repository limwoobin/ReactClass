{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useForkRef } from '../utils/reactHelpers';\nimport { exactProp } from '@material-ui/utils';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      disablePortal = props.disablePortal,\n      onRendered = props.onRendered;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountNode = _React$useState2[0],\n      setMountNode = _React$useState2[1];\n\n  var childRef = React.useRef(null);\n  var handleRef = useForkRef(children.ref, childRef);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  React.useEffect(function () {\n    if (onRendered && mountNode) {\n      onRendered();\n    }\n  }, [mountNode, onRendered]);\n  React.useImperativeHandle(ref, function () {\n    return mountNode || childRef.current;\n  }, [mountNode]);\n\n  if (disablePortal) {\n    React.Children.only(children);\n    return React.cloneElement(children, {\n      ref: handleRef\n    });\n  }\n\n  return mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   */\n  onRendered: PropTypes.func\n} : void 0;\nPortal.defaultProps = {\n  disablePortal: false\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/node_modules/@material-ui/core/esm/Portal/Portal.js"],"names":["_slicedToArray","React","ReactDOM","PropTypes","useForkRef","exactProp","getContainer","container","findDOMNode","useEnhancedEffect","window","useLayoutEffect","useEffect","Portal","forwardRef","props","ref","children","disablePortal","onRendered","_React$useState","useState","_React$useState2","mountNode","setMountNode","childRef","useRef","handleRef","document","body","useImperativeHandle","current","Children","only","cloneElement","createPortal","process","env","NODE_ENV","propTypes","node","isRequired","oneOfType","object","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useForkRef } from '../utils/reactHelpers';\nimport { exactProp } from '@material-ui/utils';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      disablePortal = props.disablePortal,\n      onRendered = props.onRendered;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountNode = _React$useState2[0],\n      setMountNode = _React$useState2[1];\n\n  var childRef = React.useRef(null);\n  var handleRef = useForkRef(children.ref, childRef);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  React.useEffect(function () {\n    if (onRendered && mountNode) {\n      onRendered();\n    }\n  }, [mountNode, onRendered]);\n  React.useImperativeHandle(ref, function () {\n    return mountNode || childRef.current;\n  }, [mountNode]);\n\n  if (disablePortal) {\n    React.Children.only(children);\n    return React.cloneElement(children, {\n      ref: handleRef\n    });\n  }\n\n  return mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   */\n  onRendered: PropTypes.func\n} : void 0;\nPortal.defaultProps = {\n  disablePortal: false\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;"]},"metadata":{},"sourceType":"module"}