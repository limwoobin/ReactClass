{"ast":null,"code":"var _jsxFileName = \"/Applications/woobeenkun/myBlog/client/src/components/CustomerAdd.jsx\";\nimport React, { Component } from 'react';\nimport { post } from 'axios'; //import axios from 'axios';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  hidden: {\n    display: 'none'\n  }\n});\n\nclass CustomerAdd extends Component {\n  // static defaultProps = {\n  // }    -> class 형에서 쓰이는 디폴트\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      this.addCustomer().then(response => {\n        console.log(response.data);\n        this.props.stateRefresh();\n      }); // 추가버튼 호출 후 고객 추가 양식을 비운 뒤 페이지를 새로고참\n\n      this.setState({\n        file: null,\n        userName: '',\n        birthday: '',\n        gender: '',\n        job: '',\n        fileName: '',\n        open: false\n      });\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        file: e.target.files[0],\n        fileName: e.target.value\n      });\n    };\n\n    this.handleValueChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n\n    this.addCustomer = () => {\n      const url = '/dr/customer/insert';\n      const formData = new FormData();\n      formData.append('image', this.state.file);\n      formData.append('name', this.state.userName);\n      formData.append('birthday', this.state.birthday);\n      formData.append('gender', this.state.gender);\n      formData.append('job', this.state.job);\n      const config = {\n        headers: {\n          //'content-type':'multipart/form-data'\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      }; // return post(url , formData , config);\n\n      return post(url, {\n        //headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'},\n        headers: {\n          'content-type': 'multipart/form-data'\n        },\n        image: this.state.file,\n        name: this.state.userName,\n        birthday: this.state.birthday,\n        gender: this.state.gender,\n        job: this.state.job\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        file: null,\n        userName: '',\n        birthday: '',\n        gender: '',\n        job: '',\n        fileName: '',\n        open: false\n      });\n    };\n\n    this.state = {\n      file: null,\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      fileName: '',\n      open: false\n    }; // this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    // this.handleFileChange = this.handleFileChange.bind(this);\n    // this.handleValueChange = this.handleValueChange.bind(this);\n    // this.addCustomer = this.addCustomer.bind(this);\n    // this.handleClickOpen = this.handleClickOpen.bind(this);\n    // this.handleClose = this.handleClose.bind(this);\n    // 함수를 화살표 함수로 정의했으면 바인딩안해줘도 된다\n    // 바인딩을 해주는 이유는 일반함수로 선언시 버튼클릭과정에서 this의 연결이 끊어지기 때문\n    // 일반 함수는 호출된곳을 this 로 참조하기 때문\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return (// <form onSubmit={this.handleFormSubmit}>\n      // <h1>고객 추가</h1>\n      // 프로필 이미지: <input type=\"file\" name=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /><br/>\n      // 이름: <input type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br/>\n      // 생년월일: <input type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br/>\n      // 성별: <input type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br/>\n      // 직업: <input type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br/>\n      // <button type=\"submit\">추가하기</button>\n      // </form>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"\\uACE0\\uAC1D \\uCD94\\uAC00\\uD558\\uAE30\"), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"\\uACE0\\uAC1D \\uCD94\\uAC00\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: classes.hidden,\n        accept: \"image/*\",\n        id: \"raised-button-file\",\n        type: \"file\",\n        file: this.state.file,\n        value: this.state.fileName,\n        onChange: this.handleFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"raised-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        component: \"span\",\n        name: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.fileName === '' ? \"프로필 이미지 선택\" : this.state.fileName)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"\\uC774\\uB984\",\n        type: \"text\",\n        name: \"userName\",\n        value: this.state.userName,\n        onChange: this.handleValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n        type: \"text\",\n        name: \"birthday\",\n        value: this.state.birthday,\n        onChange: this.handleValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"\\uC131\\uBCC4\",\n        type: \"text\",\n        name: \"gender\",\n        value: this.state.gender,\n        onChange: this.handleValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"\\uC9C1\\uC5C5\",\n        type: \"text\",\n        name: \"job\",\n        value: this.state.job,\n        onChange: this.handleValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"\\uCD94\\uAC00\"), React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"\\uB2EB\\uAE30\"))))\n    );\n  }\n\n} // CustomerAdd.defaultProps = {\n// } -> 함수형에서 쓰이는 방식(hooks)\n\n\nexport default withStyles(styles)(CustomerAdd);","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/src/components/CustomerAdd.jsx"],"names":["React","Component","post","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Button","withStyles","styles","theme","hidden","display","CustomerAdd","constructor","props","handleFormSubmit","e","preventDefault","addCustomer","then","response","console","log","data","stateRefresh","setState","file","userName","birthday","gender","job","fileName","open","handleFileChange","target","files","value","handleValueChange","nextState","name","url","formData","FormData","append","state","config","headers","image","handleClickOpen","handleClose","render","classes"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport {post} from 'axios';\n//import axios from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    hidden: {\n        display: 'none'\n    }\n});\n\nclass CustomerAdd extends Component{\n    // static defaultProps = {\n\n    // }    -> class 형에서 쓰이는 디폴트\n    constructor(props){\n        super(props);\n        this.state = {\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        }\n        // this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        // this.handleFileChange = this.handleFileChange.bind(this);\n        // this.handleValueChange = this.handleValueChange.bind(this);\n        // this.addCustomer = this.addCustomer.bind(this);\n        // this.handleClickOpen = this.handleClickOpen.bind(this);\n        // this.handleClose = this.handleClose.bind(this);\n        // 함수를 화살표 함수로 정의했으면 바인딩안해줘도 된다\n        // 바인딩을 해주는 이유는 일반함수로 선언시 버튼클릭과정에서 this의 연결이 끊어지기 때문\n        // 일반 함수는 호출된곳을 this 로 참조하기 때문\n    }    \n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.addCustomer()\n        .then((response) => {\n            console.log(response.data);\n            this.props.stateRefresh();\n        })\n\n        // 추가버튼 호출 후 고객 추가 양식을 비운 뒤 페이지를 새로고참\n        this.setState({\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        });\n    }\n\n    handleFileChange = (e) => {\n        this.setState({\n            file: e.target.files[0],\n            fileName: e.target.value\n        });\n    }     \n\n    handleValueChange = (e) => {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addCustomer = () => {\n        const url = '/dr/customer/insert';\n        const formData = new FormData();\n        formData.append('image' , this.state.file);\n        formData.append('name' , this.state.userName);\n        formData.append('birthday' , this.state.birthday);\n        formData.append('gender' , this.state.gender);\n        formData.append('job' , this.state.job);\n        const config = {\n            headers: {\n                //'content-type':'multipart/form-data'\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            }\n        };\n        // return post(url , formData , config);\n        return post(url , {\n            //headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'},\n            headers:{'content-type':'multipart/form-data'},\n            image: this.state.file,\n            name: this.state.userName,\n            birthday: this.state.birthday,\n            gender: this.state.gender,\n            job: this.state.job\n        });\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        });\n    }\n\n    render(){\n        const { classes } = this.props;\n        return (\n            // <form onSubmit={this.handleFormSubmit}>\n            // <h1>고객 추가</h1>\n            // 프로필 이미지: <input type=\"file\" name=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /><br/>\n            // 이름: <input type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br/>\n            // 생년월일: <input type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br/>\n            // 성별: <input type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br/>\n            // 직업: <input type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br/>\n            // <button type=\"submit\">추가하기</button>\n            // </form>\n            <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n            고객 추가하기\n            </Button>\n            <Dialog open={this.state.open} onClose={this.handleClose}>\n                <DialogTitle>고객 추가</DialogTitle>\n                <DialogContent>\n                    <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} />\n                    <label htmlFor=\"raised-button-file\">\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\n                            {this.state.fileName === ''? \"프로필 이미지 선택\" : this.state.fileName}\n                        </Button>\n                    </label><br/>\n                    <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br/>\n                    <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br/>\n                    <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br/>\n                    <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br/>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n    }\n}\n\n// CustomerAdd.defaultProps = {\n\n// } -> 함수형에서 쓰이는 방식(hooks)\n\nexport default withStyles(styles)(CustomerAdd);"]},"metadata":{},"sourceType":"module"}