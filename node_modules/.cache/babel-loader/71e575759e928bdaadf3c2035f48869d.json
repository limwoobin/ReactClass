{"ast":null,"code":"/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var lastFocus = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open) {\n      return;\n    }\n\n    lastFocus.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, ['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n')) : void 0;\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var enforceFocus = function enforceFocus() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next enforceFocus as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', enforceFocus, true);\n    doc.addEventListener('keydown', loopFocus, true);\n    return function () {\n      doc.removeEventListener('focus', enforceFocus, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // Not all elements in IE 11 have a focus method.\n        // Because IE 11 market share is low, we accept the restore focus being broken\n        // and we silent the issue.\n        if (lastFocus.current.focus) {\n          lastFocus.current.focus();\n        }\n\n        lastFocus.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n/**\n * @ignore - internal component.\n */\n\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This property helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default TrapFocus;","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/node_modules/@material-ui/core/esm/Modal/TrapFocus.js"],"names":["React","ReactDOM","PropTypes","warning","ownerDocument","useForkRef","TrapFocus","props","children","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","useRef","sentinelStart","sentinelEnd","lastFocus","rootRef","handleOwnRef","useCallback","instance","current","findDOMNode","handleRef","ref","useMemo","activeElement","useEffect","doc","contains","hasAttribute","process","env","NODE_ENV","join","setAttribute","focus","enforceFocus","loopFocus","event","keyCode","shiftKey","addEventListener","removeEventListener","createElement","Fragment","tabIndex","cloneElement","propTypes","element","isRequired","bool","func"],"mappings":"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","sourcesContent":["/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var lastFocus = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open) {\n      return;\n    }\n\n    lastFocus.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, ['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n')) : void 0;\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var enforceFocus = function enforceFocus() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next enforceFocus as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', enforceFocus, true);\n    doc.addEventListener('keydown', loopFocus, true);\n    return function () {\n      doc.removeEventListener('focus', enforceFocus, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // Not all elements in IE 11 have a focus method.\n        // Because IE 11 market share is low, we accept the restore focus being broken\n        // and we silent the issue.\n        if (lastFocus.current.focus) {\n          lastFocus.current.focus();\n        }\n\n        lastFocus.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n/**\n * @ignore - internal component.\n */\n\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This property helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default TrapFocus;"]},"metadata":{},"sourceType":"module"}