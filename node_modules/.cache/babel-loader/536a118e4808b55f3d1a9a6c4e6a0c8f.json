{"ast":null,"code":"var _jsxFileName = \"/Applications/woobeenkun/myBlog/client/src/board/BoardView.jsx\";\nimport React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Comment from '../common/component/Comment/Comment';\nimport { API } from '../api/Call_API';\nimport { Func } from '../common/common';\n\nclass BoardView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.state.id);\n      API.GET_BoardData(this.state.id).then(response => {\n        console.log(response.data);\n        const data = response.data.data;\n        this.setState({\n          _id: data._id,\n          views: data.views,\n          userEmail: data.userEmail,\n          boardType: data.boardType,\n          title: data.title,\n          content: data.content,\n          comments: data.comments,\n          regDate: Func.DateFormat(data.regDate)\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      _id: '',\n      id: this.props.match.params.id,\n      views: 0,\n      userEmail: '',\n      boardType: '',\n      title: '',\n      content: '',\n      comments: [],\n      regDate: ''\n    };\n  }\n\n  render() {\n    const data = this.state;\n\n    const renderComments = data => {\n      console.log('data:' + data);\n      return data.map(c => {\n        return React.createElement(Comment, {\n          key: c._id,\n          commentId: c.commentId,\n          userEmail: c.userEmail,\n          content: c.content,\n          modiDate: c.modiDate,\n          childComments: c.childComments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      style: {\n        backgroundColor: '#F6F6F6',\n        minHeight: '200px',\n        fontSize: '15px',\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\uC870\\uD68C\\uC218 : \", data.views, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \"\\uC81C\\uBAA9 : \", data.title, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \"\\uC791\\uC131\\uC790 : \", data.userEmail, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"\\uC791\\uC131\\uC77C\\uC2DC : \", data.regDate, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \"\\uB0B4\\uC6A9 : \", data.content, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"var x = 5;\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), data.comments ? renderComments(data.comments) : '댓글이 없습니다.')));\n  }\n\n}\n\nexport default BoardView;","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/src/board/BoardView.jsx"],"names":["React","Component","CssBaseline","Typography","Container","Divider","Comment","API","Func","BoardView","constructor","props","componentDidMount","console","log","state","id","GET_BoardData","then","response","data","setState","_id","views","userEmail","boardType","title","content","comments","regDate","DateFormat","catch","err","match","params","render","renderComments","map","c","commentId","modiDate","childComments","backgroundColor","minHeight","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Comment from '../common/component/Comment/Comment';\nimport {API} from '../api/Call_API';\nimport {Func} from '../common/common';\n\nclass BoardView extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            _id: '',\n            id:this.props.match.params.id,\n            views: 0,\n            userEmail: '',\n            boardType: '',\n            title: '',\n            content: '',\n            comments: [],\n            regDate:'',\n        }\n    }\n\n    componentDidMount = () => {\n        console.log(this.state.id);\n        API.GET_BoardData(this.state.id)\n        .then(response => {\n            console.log(response.data);\n            const data = response.data.data;\n            this.setState({\n                _id: data._id,\n                views: data.views,\n                userEmail: data.userEmail,\n                boardType: data.boardType,\n                title: data.title,\n                content: data.content,\n                comments: data.comments,\n                regDate: Func.DateFormat(data.regDate),\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n   \n\n    render(){\n        const data = this.state;\n        const renderComments = (data) => {\n            console.log('data:' + data);\n            return data.map((c) => {\n                return <Comment \n                            key={c._id}\n                            commentId={c.commentId}\n                            userEmail={c.userEmail}\n                            content={c.content}\n                            modiDate={c.modiDate}\n                            childComments={c.childComments}\n                        />\n            });\n        }\n        return(\n            <div>\n                <CssBaseline />\n                <Container maxWidth=\"md\">\n                <Typography component=\"div\" style={{ backgroundColor: '#F6F6F6' , minHeight:'200px' , fontSize: '15px' , textAlign: 'left'}}>\n                    <div>\n                        조회수 : {data.views} <br/>\n                        제목 : {data.title} <br/>\n                        작성자 : {data.userEmail} <br/>\n                        {/* 작성일시 : {Func.DateFormat(data.regDate)} <br/> */}\n                        작성일시 : {data.regDate} <br/>\n                        <br /><br />\n                        <Divider />\n                        내용 : {data.content} <br/>\n                        <pre>\n                            <code>var x = 5;</code>\n                        </pre>  \n                        <br /><br />\n                    </div>\n                    <Divider />\n                    {data.comments ?\n                        renderComments(data.comments) :\n                        '댓글이 없습니다.'\n                    }\n                </Typography>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default BoardView;"]},"metadata":{},"sourceType":"module"}