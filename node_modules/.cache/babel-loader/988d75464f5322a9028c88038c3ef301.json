{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport { createChainedFunction } from '../utils/helpers';\nimport { setRef } from '../utils/reactHelpers';\nimport withForwardedRef from '../utils/withForwardedRef';\nimport { withTheme } from '@material-ui/styles';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport zIndex from '../styles/zIndex';\nimport ModalManager from './ModalManager';\nimport TrapFocus from './TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\nimport { ariaHidden } from './manageAriaHidden';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this));\n\n    _this.handleOpen = function () {\n      var container = getContainer(_this.props.container) || _this.getDoc().body;\n\n      _this.props.manager.add(_assertThisInitialized(_this), container);\n\n      if (_this.modalRef) {\n        _this.handleOpened();\n      }\n    };\n\n    _this.handleRendered = function () {\n      if (_this.props.onRendered) {\n        _this.props.onRendered();\n      }\n\n      if (_this.props.open) {\n        _this.handleOpened();\n      } else {\n        ariaHidden(_this.modalRef, true);\n      }\n    };\n\n    _this.handleOpened = function () {\n      _this.props.manager.mount(_assertThisInitialized(_this)); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n\n      _this.modalRef.scrollTop = 0;\n    };\n\n    _this.handleClose = function (reason) {\n      var hasTransition = getHasTransition(_this.props);\n      /* If the component does not have a transition or is unmounting remove the Modal\n      otherwise let the transition handle removing the style, this prevents elements\n      moving around when the Modal is closed. */\n\n      if (!(hasTransition && _this.props.closeAfterTransition) || reason === 'unmount') {\n        _this.props.manager.remove(_assertThisInitialized(_this));\n      }\n    };\n\n    _this.handleEnter = function () {\n      _this.setState({\n        exited: false\n      });\n    };\n\n    _this.handleExited = function () {\n      if (_this.props.closeAfterTransition) {\n        _this.props.manager.remove(_assertThisInitialized(_this));\n      }\n\n      _this.setState({\n        exited: true\n      });\n    };\n\n    _this.handleBackdropClick = function (event) {\n      if (event.target !== event.currentTarget) {\n        return;\n      }\n\n      if (_this.props.onBackdropClick) {\n        _this.props.onBackdropClick(event);\n      }\n\n      if (!_this.props.disableBackdropClick && _this.props.onClose) {\n        _this.props.onClose(event, 'backdropClick');\n      }\n    };\n\n    _this.handleKeyDown = function (event) {\n      // We don't take event.defaultPrevented into account:\n      //\n      // event.preventDefault() is meant to stop default behaviours like\n      // clicking a checkbox to check it, hitting a button to submit a form,\n      // and hitting left arrow to move the cursor in a text input etc.\n      // Only special HTML elements have these default behaviors.\n      if (event.key !== 'Escape' || !_this.isTopModal()) {\n        return;\n      } // Swallow the event, in case someone is listening for the escape key on the body.\n\n\n      event.stopPropagation();\n\n      if (_this.props.onEscapeKeyDown) {\n        _this.props.onEscapeKeyDown(event);\n      }\n\n      if (!_this.props.disableEscapeKeyDown && _this.props.onClose) {\n        _this.props.onClose(event, 'escapeKeyDown');\n      }\n    };\n\n    _this.handlePortalRef = function (ref) {\n      _this.mountNode = ref;\n    };\n\n    _this.handleModalRef = function (ref) {\n      _this.modalRef = ref;\n      setRef(_this.props.innerRef, ref);\n    };\n\n    _this.isTopModal = function () {\n      return _this.props.manager.isTopModal(_assertThisInitialized(_this));\n    };\n\n    _this.getDoc = function () {\n      return ownerDocument(_this.mountNode);\n    };\n\n    _this.state = {\n      exited: !props.open\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.open) {\n        this.handleOpen();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.open && !this.props.open) {\n        this.handleClose();\n      } else if (!prevProps.open && this.props.open) {\n        this.handleOpen();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.open || getHasTransition(this.props) && !this.state.exited) {\n        this.handleClose('unmount');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          BackdropComponent = _this$props.BackdropComponent,\n          BackdropProps = _this$props.BackdropProps,\n          children = _this$props.children,\n          closeAfterTransition = _this$props.closeAfterTransition,\n          container = _this$props.container,\n          disableAutoFocus = _this$props.disableAutoFocus,\n          disableBackdropClick = _this$props.disableBackdropClick,\n          disableEnforceFocus = _this$props.disableEnforceFocus,\n          disableEscapeKeyDown = _this$props.disableEscapeKeyDown,\n          disablePortal = _this$props.disablePortal,\n          disableRestoreFocus = _this$props.disableRestoreFocus,\n          hideBackdrop = _this$props.hideBackdrop,\n          innerRef = _this$props.innerRef,\n          keepMounted = _this$props.keepMounted,\n          manager = _this$props.manager,\n          onBackdropClick = _this$props.onBackdropClick,\n          onClose = _this$props.onClose,\n          onEscapeKeyDown = _this$props.onEscapeKeyDown,\n          onRendered = _this$props.onRendered,\n          open = _this$props.open,\n          theme = _this$props.theme,\n          other = _objectWithoutProperties(_this$props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"hideBackdrop\", \"innerRef\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\", \"theme\"]);\n\n      var exited = this.state.exited;\n      var hasTransition = getHasTransition(this.props);\n\n      if (!keepMounted && !open && (!hasTransition || exited)) {\n        return null;\n      }\n\n      var childProps = {}; // It's a Transition like component\n\n      if (hasTransition) {\n        childProps.onEnter = createChainedFunction(this.handleEnter, children.props.onEnter);\n        childProps.onExited = createChainedFunction(this.handleExited, children.props.onExited);\n      }\n\n      if (children.props.role === undefined) {\n        childProps.role = children.props.role || 'document';\n      }\n\n      if (children.props.tabIndex === undefined) {\n        childProps.tabIndex = children.props.tabIndex || '-1';\n      }\n\n      var stylesRender = styles(theme || {\n        zIndex: zIndex\n      });\n      return React.createElement(Portal, {\n        ref: this.handlePortalRef,\n        container: container,\n        disablePortal: disablePortal,\n        onRendered: this.handleRendered\n      }, React.createElement(\"div\", _extends({\n        ref: this.handleModalRef,\n        onKeyDown: this.handleKeyDown,\n        role: \"presentation\"\n      }, other, {\n        style: _extends({}, stylesRender.root, !open && exited ? stylesRender.hidden : {}, other.style)\n      }), hideBackdrop ? null : React.createElement(BackdropComponent, _extends({\n        open: open,\n        onClick: this.handleBackdropClick\n      }, BackdropProps)), React.createElement(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        getDoc: this.getDoc,\n        isEnabled: this.isTopModal,\n        open: open\n      }, React.cloneElement(children, childProps))));\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This property enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Properties applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire any callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire any callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Always keep the children in the DOM.\n   * This property can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   *\n   * A modal manager used to track and manage the state of open\n   * Modals. This enables customizing how modals interact within a container.\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` property took effect.\n   */\n  onRendered: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object\n} : void 0;\nModal.defaultProps = {\n  BackdropComponent: SimpleBackdrop,\n  closeAfterTransition: false,\n  disableAutoFocus: false,\n  disableBackdropClick: false,\n  disableEnforceFocus: false,\n  disableEscapeKeyDown: false,\n  disablePortal: false,\n  disableRestoreFocus: false,\n  hideBackdrop: false,\n  keepMounted: false,\n  // Modals don't open on the server so this won't conflict with concurrent requests.\n  manager: new ModalManager()\n};\nexport default withTheme(withForwardedRef(Modal));","map":{"version":3,"sources":["/Applications/woobeenkun/myBlog/client/node_modules/@material-ui/core/esm/Modal/Modal.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","React","ReactDOM","PropTypes","ownerDocument","Portal","createChainedFunction","setRef","withForwardedRef","withTheme","elementAcceptingRef","zIndex","ModalManager","TrapFocus","SimpleBackdrop","ariaHidden","getContainer","container","findDOMNode","getHasTransition","props","children","hasOwnProperty","styles","theme","root","position","modal","right","bottom","top","left","hidden","visibility","Modal","_React$Component","_this","call","handleOpen","getDoc","body","manager","add","modalRef","handleOpened","handleRendered","onRendered","open","mount","scrollTop","handleClose","reason","hasTransition","closeAfterTransition","remove","handleEnter","setState","exited","handleExited","handleBackdropClick","event","target","currentTarget","onBackdropClick","disableBackdropClick","onClose","handleKeyDown","key","isTopModal","stopPropagation","onEscapeKeyDown","disableEscapeKeyDown","handlePortalRef","ref","mountNode","handleModalRef","innerRef","state","value","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","_this$props","BackdropComponent","BackdropProps","disableAutoFocus","disableEnforceFocus","disablePortal","disableRestoreFocus","hideBackdrop","keepMounted","other","childProps","onEnter","onExited","role","undefined","tabIndex","stylesRender","createElement","onKeyDown","style","onClick","isEnabled","cloneElement","Component","process","env","NODE_ENV","propTypes","elementType","object","isRequired","bool","oneOfType","func","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport { createChainedFunction } from '../utils/helpers';\nimport { setRef } from '../utils/reactHelpers';\nimport withForwardedRef from '../utils/withForwardedRef';\nimport { withTheme } from '@material-ui/styles';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport zIndex from '../styles/zIndex';\nimport ModalManager from './ModalManager';\nimport TrapFocus from './TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\nimport { ariaHidden } from './manageAriaHidden';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this));\n\n    _this.handleOpen = function () {\n      var container = getContainer(_this.props.container) || _this.getDoc().body;\n\n      _this.props.manager.add(_assertThisInitialized(_this), container);\n\n      if (_this.modalRef) {\n        _this.handleOpened();\n      }\n    };\n\n    _this.handleRendered = function () {\n      if (_this.props.onRendered) {\n        _this.props.onRendered();\n      }\n\n      if (_this.props.open) {\n        _this.handleOpened();\n      } else {\n        ariaHidden(_this.modalRef, true);\n      }\n    };\n\n    _this.handleOpened = function () {\n      _this.props.manager.mount(_assertThisInitialized(_this)); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n\n      _this.modalRef.scrollTop = 0;\n    };\n\n    _this.handleClose = function (reason) {\n      var hasTransition = getHasTransition(_this.props);\n      /* If the component does not have a transition or is unmounting remove the Modal\n      otherwise let the transition handle removing the style, this prevents elements\n      moving around when the Modal is closed. */\n\n      if (!(hasTransition && _this.props.closeAfterTransition) || reason === 'unmount') {\n        _this.props.manager.remove(_assertThisInitialized(_this));\n      }\n    };\n\n    _this.handleEnter = function () {\n      _this.setState({\n        exited: false\n      });\n    };\n\n    _this.handleExited = function () {\n      if (_this.props.closeAfterTransition) {\n        _this.props.manager.remove(_assertThisInitialized(_this));\n      }\n\n      _this.setState({\n        exited: true\n      });\n    };\n\n    _this.handleBackdropClick = function (event) {\n      if (event.target !== event.currentTarget) {\n        return;\n      }\n\n      if (_this.props.onBackdropClick) {\n        _this.props.onBackdropClick(event);\n      }\n\n      if (!_this.props.disableBackdropClick && _this.props.onClose) {\n        _this.props.onClose(event, 'backdropClick');\n      }\n    };\n\n    _this.handleKeyDown = function (event) {\n      // We don't take event.defaultPrevented into account:\n      //\n      // event.preventDefault() is meant to stop default behaviours like\n      // clicking a checkbox to check it, hitting a button to submit a form,\n      // and hitting left arrow to move the cursor in a text input etc.\n      // Only special HTML elements have these default behaviors.\n      if (event.key !== 'Escape' || !_this.isTopModal()) {\n        return;\n      } // Swallow the event, in case someone is listening for the escape key on the body.\n\n\n      event.stopPropagation();\n\n      if (_this.props.onEscapeKeyDown) {\n        _this.props.onEscapeKeyDown(event);\n      }\n\n      if (!_this.props.disableEscapeKeyDown && _this.props.onClose) {\n        _this.props.onClose(event, 'escapeKeyDown');\n      }\n    };\n\n    _this.handlePortalRef = function (ref) {\n      _this.mountNode = ref;\n    };\n\n    _this.handleModalRef = function (ref) {\n      _this.modalRef = ref;\n      setRef(_this.props.innerRef, ref);\n    };\n\n    _this.isTopModal = function () {\n      return _this.props.manager.isTopModal(_assertThisInitialized(_this));\n    };\n\n    _this.getDoc = function () {\n      return ownerDocument(_this.mountNode);\n    };\n\n    _this.state = {\n      exited: !props.open\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.open) {\n        this.handleOpen();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.open && !this.props.open) {\n        this.handleClose();\n      } else if (!prevProps.open && this.props.open) {\n        this.handleOpen();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.open || getHasTransition(this.props) && !this.state.exited) {\n        this.handleClose('unmount');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          BackdropComponent = _this$props.BackdropComponent,\n          BackdropProps = _this$props.BackdropProps,\n          children = _this$props.children,\n          closeAfterTransition = _this$props.closeAfterTransition,\n          container = _this$props.container,\n          disableAutoFocus = _this$props.disableAutoFocus,\n          disableBackdropClick = _this$props.disableBackdropClick,\n          disableEnforceFocus = _this$props.disableEnforceFocus,\n          disableEscapeKeyDown = _this$props.disableEscapeKeyDown,\n          disablePortal = _this$props.disablePortal,\n          disableRestoreFocus = _this$props.disableRestoreFocus,\n          hideBackdrop = _this$props.hideBackdrop,\n          innerRef = _this$props.innerRef,\n          keepMounted = _this$props.keepMounted,\n          manager = _this$props.manager,\n          onBackdropClick = _this$props.onBackdropClick,\n          onClose = _this$props.onClose,\n          onEscapeKeyDown = _this$props.onEscapeKeyDown,\n          onRendered = _this$props.onRendered,\n          open = _this$props.open,\n          theme = _this$props.theme,\n          other = _objectWithoutProperties(_this$props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"hideBackdrop\", \"innerRef\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\", \"theme\"]);\n\n      var exited = this.state.exited;\n      var hasTransition = getHasTransition(this.props);\n\n      if (!keepMounted && !open && (!hasTransition || exited)) {\n        return null;\n      }\n\n      var childProps = {}; // It's a Transition like component\n\n      if (hasTransition) {\n        childProps.onEnter = createChainedFunction(this.handleEnter, children.props.onEnter);\n        childProps.onExited = createChainedFunction(this.handleExited, children.props.onExited);\n      }\n\n      if (children.props.role === undefined) {\n        childProps.role = children.props.role || 'document';\n      }\n\n      if (children.props.tabIndex === undefined) {\n        childProps.tabIndex = children.props.tabIndex || '-1';\n      }\n\n      var stylesRender = styles(theme || {\n        zIndex: zIndex\n      });\n      return React.createElement(Portal, {\n        ref: this.handlePortalRef,\n        container: container,\n        disablePortal: disablePortal,\n        onRendered: this.handleRendered\n      }, React.createElement(\"div\", _extends({\n        ref: this.handleModalRef,\n        onKeyDown: this.handleKeyDown,\n        role: \"presentation\"\n      }, other, {\n        style: _extends({}, stylesRender.root, !open && exited ? stylesRender.hidden : {}, other.style)\n      }), hideBackdrop ? null : React.createElement(BackdropComponent, _extends({\n        open: open,\n        onClick: this.handleBackdropClick\n      }, BackdropProps)), React.createElement(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        getDoc: this.getDoc,\n        isEnabled: this.isTopModal,\n        open: open\n      }, React.cloneElement(children, childProps))));\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This property enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Properties applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire any callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire any callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Always keep the children in the DOM.\n   * This property can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   *\n   * A modal manager used to track and manage the state of open\n   * Modals. This enables customizing how modals interact within a container.\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` property took effect.\n   */\n  onRendered: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object\n} : void 0;\nModal.defaultProps = {\n  BackdropComponent: SimpleBackdrop,\n  closeAfterTransition: false,\n  disableAutoFocus: false,\n  disableBackdropClick: false,\n  disableEnforceFocus: false,\n  disableEscapeKeyDown: false,\n  disablePortal: false,\n  disableRestoreFocus: false,\n  hideBackdrop: false,\n  keepMounted: false,\n  // Modals don't open on the server so this won't conflict with concurrent requests.\n  manager: new ModalManager()\n};\nexport default withTheme(withForwardedRef(Modal));"]},"metadata":{},"sourceType":"module"}